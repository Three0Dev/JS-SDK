{"mappings":"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","sources":["src/blockchain/NEAR.js","src/utils.js","src/database/init.js","src/database/ipfs/index.js","src/auth/index.js","src/auth/init.js","src/index.js","src/blockchain/index.js"],"sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'\r\nimport { getBlockchainType } from '../utils'\r\n\r\nexport function getNearConfig() {\r\n\tconst CONTRACT_NAME = globalThis.projectConfig.contractName\r\n\tconst chainType = getBlockchainType()\r\n\r\n\tswitch (chainType) {\r\n\t\tcase 'production':\r\n\t\tcase 'mainnet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'mainnet',\r\n\t\t\t\tnodeUrl: 'https://rpc.mainnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.mainnet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.mainnet.near.org',\r\n\t\t\t}\r\n\t\tcase 'development':\r\n\t\tcase 'testnet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'testnet',\r\n\t\t\t\tnodeUrl: 'https://rpc.testnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.testnet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.testnet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.testnet.near.org',\r\n\t\t\t}\r\n\t\tcase 'betanet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'betanet',\r\n\t\t\t\tnodeUrl: 'https://rpc.betanet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.betanet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.betanet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.betanet.near.org',\r\n\t\t\t}\r\n\t\tcase 'local':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'local',\r\n\t\t\t\tnodeUrl: 'http://localhost:3030',\r\n\t\t\t\tkeyPath: `${process.env.HOME}/.near/validator_key.json`,\r\n\t\t\t\twalletUrl: 'http://localhost:4000/wallet',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t}\r\n\t\tcase 'test':\r\n\t\tcase 'ci':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'shared-test',\r\n\t\t\t\tnodeUrl: 'https://rpc.ci-testnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\tmasterAccount: 'test.near',\r\n\t\t\t}\r\n\t\tcase 'ci-betanet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'shared-test-staging',\r\n\t\t\t\tnodeUrl: 'https://rpc.ci-betanet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\tmasterAccount: 'test.near',\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow Error(\r\n\t\t\t\t`Unconfigured environment '${chainType}'. Can be configured in src/config.js.`\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n// Initialize contract & set global variables\r\nexport async function init() {\r\n\tconst nearConfig = getNearConfig()\r\n\r\n\t// Initialize connection to the NEAR testnet\r\n\tconst near = await connect({\r\n\t\tdeps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() },\r\n\t\t...nearConfig,\r\n\t})\r\n\r\n\t// Initializing Wallet based Account. It can work with NEAR testnet wallet that\r\n\t// is hosted at https://wallet.testnet.near.org\r\n\tglobalThis.walletConnection = new WalletConnection(near)\r\n\r\n\t// Getting the Account ID. If still unauthorized, it's just empty string\r\n\tglobalThis.accountId = globalThis.walletConnection.getAccountId()\r\n\r\n\t// Initializing our contract APIs by contract name and configuration\r\n\tglobalThis.contract = new Contract(\r\n\t\tglobalThis.walletConnection.account(),\r\n\t\tnearConfig.contractName,\r\n\t\t{\r\n\t\t\t// View methods are read only. They don't modify the state, but usually return some value.\r\n\t\t\tviewMethods: ['user_exists', 'get_user', 'valid_database'],\r\n\t\t\t// Change methods can modify the state. But you don't receive the returned value when called.\r\n\t\t\tchangeMethods: ['create_user', 'user_action'],\r\n\t\t}\r\n\t)\r\n}\r\n","export function getBlockchainType() {\r\n\tswitch (globalThis.projectConfig.chainType) {\r\n\t\tcase 'NEAR_TESTNET':\r\n\t\t\treturn 'testnet'\r\n\t\tdefault:\r\n\t\t\tthrow Error(\r\n\t\t\t\t`Unconfigured chainType '${globalThis.projectConfig.chainType}'`\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport function getPID() {\r\n\treturn globalThis.projectId\r\n}\r\n\r\nexport function getQueryParams() {\r\n\treturn new URLSearchParams(location.search)\r\n}\r\n","// import IdentityProvider from 'orbit-db-identity-provider';\r\nimport OrbitDB from 'orbit-db'\r\nimport initIPFS from './ipfs'\r\n// import NearIdentityProvider from './identities/NEAR';\r\nimport { isLoggedIn } from '../auth'\r\n\r\n// Start OrbitDB\r\nconst initOrbitDB = async () => {\r\n\tif (globalThis.orbitdb) return\r\n\r\n\tconst ipfs = await initIPFS()\r\n\tconst loggedIn = isLoggedIn()\r\n\r\n\tif (loggedIn) {\r\n\t\tif (globalThis.projectConfig.chainType.includes('NEAR')) {\r\n\t\t\t// IdentityProvider.addIdentityProvider(NearIdentityProvider);\r\n\t\t\t// const identity = await IdentityProvider.createIdentity({ type: 'NearIdentity' });\r\n\t\t\t// const orbitdb = await OrbitDB.createInstance(ipfs, {identity});\r\n\t\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\r\n\t\t}\r\n\t} else {\r\n\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\r\n\t}\r\n}\r\n\r\nexport default initOrbitDB\r\n","import * as IPFS from 'ipfs-core'\r\n\r\nlet ipfs\r\n\r\nconst IPFS_CONFIG = {\r\n\tstart: true,\r\n\tEXPERIMENTAL: {\r\n\t\tpubsub: true,\r\n\t},\r\n\tpreload: {\r\n\t\tenabled: false,\r\n\t},\r\n\tconfig: {\r\n\t\tAddresses: {\r\n\t\t\tSwarm: [\r\n\t\t\t\t'/dns4/three0-rtc-node.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n}\r\n\r\nconst initIPFS = async () => {\r\n\tipfs = ipfs || (await IPFS.create(IPFS_CONFIG))\r\n\treturn ipfs\r\n}\r\n\r\nexport default initIPFS\r\n","export function add(a, b) {\r\n\treturn a + b;\r\n  }\r\n\r\nexport function isLoggedIn() {\r\n\treturn globalThis.walletConnection.isSignedIn()\r\n}\r\n\r\nexport function getAccountId() {\r\n\treturn globalThis.walletConnection.getAccountId()\r\n}\r\n\r\nexport async function logout() {\r\n\ttry {\r\n\t\tawait globalThis.contract.user_action({\r\n\t\t\taction: 'LOGOUT',\r\n\t\t})\r\n\t\tglobalThis.walletConnection.signOut()\r\n\t} catch (e) {\r\n\t\tconsole.error(e)\r\n\t\tthrow e\r\n\t}\r\n}\r\n\r\nexport async function login(\r\n\tappName = 'My Three0 App',\r\n\tsuccessUrL = window.location.href,\r\n\tfailureUrL = window.location.href\r\n) {\r\n\tglobalThis.walletConnection.requestSignIn(\r\n\t\tglobalThis.projectConfig.contractName,\r\n\t\tappName,\r\n\t\tsuccessUrL,\r\n\t\tfailureUrL\r\n\t)\r\n}\r\n","import { isLoggedIn as isLoggedInLocally, getAccountId } from '.'\r\n\r\nexport default async function initAuth() {\r\n\tif (isLoggedInLocally()) {\r\n\t\tlet isLoggedIn = true\r\n\r\n\t\ttry {\r\n\t\t\tisLoggedIn = await globalThis.contract.get_user({\r\n\t\t\t\taccount_id: getAccountId(),\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tisLoggedIn = false\r\n\t\t}\r\n\r\n\t\tif (!isLoggedIn) {\r\n\t\t\tawait globalThis.contract.user_action({\r\n\t\t\t\taction: 'LOGIN',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import { NEAR } from './blockchain'\r\nimport initOrbitDB from './database/init'\r\nimport initAuth from './auth/init'\r\n\r\nconst init = async (projectConfig) => {\r\n\tglobalThis.projectConfig = projectConfig\r\n\r\n\tswitch (projectConfig.chainType) {\r\n\t\tcase 'NEAR_TESTNET':\r\n\t\t\tawait NEAR.init()\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tthrow Error(`Unconfigured chainType '${projectConfig.chainType}'`)\r\n\t}\r\n\r\n\tawait initAuth()\r\n\tawait initOrbitDB()\r\n}\r\n\r\nexport default init\r\n","import * as NEAR from './NEAR'\r\n\r\nexport {\r\n\t// eslint-disable-next-line import/prefer-default-export\r\n\tNEAR,\r\n}\r\n"],"names":["getNearConfig","CONTRACT_NAME","globalThis","projectConfig","contractName","chainType","getBlockchainType","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","keyPath","process","env","HOME","masterAccount","Error","init","nearConfig","near","connect","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","getPID","projectId","getQueryParams","URLSearchParams","location","search","initOrbitDB","orbitdb","ipfs","initIPFS","loggedIn","isLoggedIn","includes","OrbitDB","createInstance","IPFS_CONFIG","start","EXPERIMENTAL","pubsub","preload","enabled","config","Addresses","Swarm","IPFS","create","add","a","b","isSignedIn","logout","user_action","action","signOut","e","console","error","login","appName","successUrL","window","href","failureUrL","requestSignIn","initAuth","isLoggedInLocally","get_user","account_id","NEAR"],"version":3,"file":"index.js.map","sourceRoot":"../../"}