{"mappings":"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","sources":["src/index.js","src/blockchain/index.js","src/blockchain/NEAR.js","src/utils.js","src/database/init.js","src/database/ipfs/index.js","src/auth/index.js","src/auth/init.js"],"sourcesContent":["import { NEAR } from './blockchain'\nimport initOrbitDB from './database/init'\nimport initAuth from './auth/init'\n\nconst init = async (projectConfig) => {\n\tglobalThis.projectConfig = projectConfig\n\n\tswitch (projectConfig.chainType) {\n\t\tcase 'NEAR_TESTNET':\n\t\t\tawait NEAR.init()\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow Error(`Unconfigured chainType '${projectConfig.chainType}'`)\n\t}\n\n\tawait initAuth()\n\tawait initOrbitDB()\n}\n\nexport default init\n","import * as NEAR from './NEAR'\n\nexport {\n\t// eslint-disable-next-line import/prefer-default-export\n\tNEAR,\n}\n","import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'\nimport { getBlockchainType } from '../utils'\n\nexport function getNearConfig() {\n\tconst CONTRACT_NAME = globalThis.projectConfig.contractName\n\tconst chainType = getBlockchainType()\n\n\tswitch (chainType) {\n\t\tcase 'production':\n\t\tcase 'mainnet':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'mainnet',\n\t\t\t\tnodeUrl: 'https://rpc.mainnet.near.org',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t\twalletUrl: 'https://wallet.near.org',\n\t\t\t\thelperUrl: 'https://helper.mainnet.near.org',\n\t\t\t\texplorerUrl: 'https://explorer.mainnet.near.org',\n\t\t\t}\n\t\tcase 'development':\n\t\tcase 'testnet':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'testnet',\n\t\t\t\tnodeUrl: 'https://rpc.testnet.near.org',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t\twalletUrl: 'https://wallet.testnet.near.org',\n\t\t\t\thelperUrl: 'https://helper.testnet.near.org',\n\t\t\t\texplorerUrl: 'https://explorer.testnet.near.org',\n\t\t\t}\n\t\tcase 'betanet':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'betanet',\n\t\t\t\tnodeUrl: 'https://rpc.betanet.near.org',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t\twalletUrl: 'https://wallet.betanet.near.org',\n\t\t\t\thelperUrl: 'https://helper.betanet.near.org',\n\t\t\t\texplorerUrl: 'https://explorer.betanet.near.org',\n\t\t\t}\n\t\tcase 'local':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'local',\n\t\t\t\tnodeUrl: 'http://localhost:3030',\n\t\t\t\tkeyPath: `${process.env.HOME}/.near/validator_key.json`,\n\t\t\t\twalletUrl: 'http://localhost:4000/wallet',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t}\n\t\tcase 'test':\n\t\tcase 'ci':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'shared-test',\n\t\t\t\tnodeUrl: 'https://rpc.ci-testnet.near.org',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t\tmasterAccount: 'test.near',\n\t\t\t}\n\t\tcase 'ci-betanet':\n\t\t\treturn {\n\t\t\t\tnetworkId: 'shared-test-staging',\n\t\t\t\tnodeUrl: 'https://rpc.ci-betanet.near.org',\n\t\t\t\tcontractName: CONTRACT_NAME,\n\t\t\t\tmasterAccount: 'test.near',\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow Error(\n\t\t\t\t`Unconfigured environment '${chainType}'. Can be configured in src/config.js.`\n\t\t\t)\n\t}\n}\n\n// Initialize contract & set global variables\nexport async function init() {\n\tconst nearConfig = getNearConfig()\n\n\t// Initialize connection to the NEAR testnet\n\tconst near = await connect({\n\t\tdeps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() },\n\t\t...nearConfig,\n\t})\n\n\t// Initializing Wallet based Account. It can work with NEAR testnet wallet that\n\t// is hosted at https://wallet.testnet.near.org\n\tglobalThis.walletConnection = new WalletConnection(near)\n\n\t// Getting the Account ID. If still unauthorized, it's just empty string\n\tglobalThis.accountId = globalThis.walletConnection.getAccountId()\n\n\t// Initializing our contract APIs by contract name and configuration\n\tglobalThis.contract = new Contract(\n\t\tglobalThis.walletConnection.account(),\n\t\tnearConfig.contractName,\n\t\t{\n\t\t\t// View methods are read only. They don't modify the state, but usually return some value.\n\t\t\tviewMethods: ['user_exists', 'get_user', 'valid_database'],\n\t\t\t// Change methods can modify the state. But you don't receive the returned value when called.\n\t\t\tchangeMethods: ['create_user', 'user_action'],\n\t\t}\n\t)\n}\n","export function getBlockchainType() {\n\tswitch (globalThis.projectConfig.chainType) {\n\t\tcase 'NEAR_TESTNET':\n\t\t\treturn 'testnet'\n\t\tdefault:\n\t\t\tthrow Error(\n\t\t\t\t`Unconfigured chainType '${globalThis.projectConfig.chainType}'`\n\t\t\t)\n\t}\n}\n\nexport function getPID() {\n\treturn globalThis.projectId\n}\n\nexport function getQueryParams() {\n\treturn new URLSearchParams(location.search)\n}\n","// import IdentityProvider from 'orbit-db-identity-provider';\nimport OrbitDB from 'orbit-db'\nimport initIPFS from './ipfs'\n// import NearIdentityProvider from './identities/NEAR';\nimport { isLoggedIn } from '../auth'\n\n// Start OrbitDB\nconst initOrbitDB = async () => {\n\tif (globalThis.orbitdb) return\n\n\tconst ipfs = await initIPFS()\n\tconst loggedIn = isLoggedIn()\n\n\tif (loggedIn) {\n\t\tif (globalThis.projectConfig.chainType.includes('NEAR')) {\n\t\t\t// IdentityProvider.addIdentityProvider(NearIdentityProvider);\n\t\t\t// const identity = await IdentityProvider.createIdentity({ type: 'NearIdentity' });\n\t\t\t// const orbitdb = await OrbitDB.createInstance(ipfs, {identity});\n\t\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\n\t\t}\n\t} else {\n\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\n\t}\n}\n\nexport default initOrbitDB\n","import * as IPFS from 'ipfs-core'\n\nlet ipfs\n\nconst IPFS_CONFIG = {\n\tstart: true,\n\tEXPERIMENTAL: {\n\t\tpubsub: true,\n\t},\n\tpreload: {\n\t\tenabled: false,\n\t},\n\tconfig: {\n\t\tAddresses: {\n\t\t\tSwarm: [\n\t\t\t\t'/dns4/three0-rtc-node.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\n\t\t\t],\n\t\t},\n\t},\n}\n\nconst initIPFS = async () => {\n\tipfs = ipfs || (await IPFS.create(IPFS_CONFIG))\n\treturn ipfs\n}\n\nexport default initIPFS\n","export function isLoggedIn() {\n\treturn globalThis.walletConnection.isSignedIn()\n}\n\nexport function getAccountId() {\n\treturn globalThis.walletConnection.getAccountId()\n}\n\nexport async function logout() {\n\ttry {\n\t\tawait globalThis.contract.user_action({\n\t\t\taction: 'LOGOUT',\n\t\t})\n\t\tglobalThis.walletConnection.signOut()\n\t} catch (e) {\n\t\tconsole.error(e)\n\t\tthrow e\n\t}\n}\n\nexport async function login(\n\tappName = 'My Three0 App',\n\tsuccessUrL = window.location.href,\n\tfailureUrL = window.location.href\n) {\n\tglobalThis.walletConnection.requestSignIn(\n\t\tglobalThis.projectConfig.contractName,\n\t\tappName,\n\t\tsuccessUrL,\n\t\tfailureUrL\n\t)\n}\n","import { isLoggedIn as isLoggedInLocally, getAccountId } from '.'\n\nexport default async function initAuth() {\n\tif (isLoggedInLocally()) {\n\t\tlet isLoggedIn = true\n\n\t\ttry {\n\t\t\tisLoggedIn = await globalThis.contract.get_user({\n\t\t\t\taccount_id: getAccountId(),\n\t\t\t})\n\t\t} catch (e) {\n\t\t\tisLoggedIn = false\n\t\t}\n\n\t\tif (!isLoggedIn) {\n\t\t\tawait globalThis.contract.user_action({\n\t\t\t\taction: 'LOGIN',\n\t\t\t})\n\t\t}\n\t}\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../"}