{"mappings":"AIIA,gCAA+B,MAAM,CAEpC;AAED,wCAUC;AAED,sBACE,OAAO,SAAkB,EACzB,UAAU,SAAuB,EACjC,UAAU,SAAuB,iBAQlC;AI/BD;;gBAGc,QAAQ,KAAA;IAIpB,QAAQ,CAAC,UAAU,KAAA;CAGpB;AOgDD,2BAAiC,OAAO,EAAC,MAAM,qBAE9C;AAED,4BAAkC,OAAO,EAAC,MAAM,EAAE,OAAO;;CAAqB,qBAE7E;AAED,4BAAkC,OAAO,EAAC,MAAM,qBAE/C;AAED,wBAA8B,OAAO,EAAC,MAAM,qBAE3C;AAED,4BAAkC,OAAO,EAAC,MAAM,qBAE/C;AAED,oCAEC;ACzED,QAAA,MAAM,IAAI,uCAaT,CAAC;AAEF,eAAe,IAAI,CAAC","sources":["src/src/utils.ts","src/src/blockchain/NEAR.ts","src/src/blockchain/index.ts","src/src/database/ipfs/index.ts","src/src/auth/index.ts","src/src/database/init.ts","src/src/auth/init.ts","src/src/database/wrappers/utils.ts","src/src/database/wrappers/database.ts","src/src/database/wrappers/counter.ts","src/src/database/wrappers/docstore.ts","src/src/database/wrappers/eventlog.ts","src/src/database/wrappers/feed.ts","src/src/database/wrappers/keyvalue.ts","src/src/database/wrappers/index.ts","src/src/database/index.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { NEAR } from './blockchain';\r\nimport initOrbitDB from './database/init';\r\nimport initAuth from './auth/init';\r\n\r\nimport { getAccountId, login, logout } from './auth';\r\nimport { timestamp, getCounter, getKeyValue, getDocStore, getFeed, getEventLog } from './database';\r\n\r\nconst init = async (projectConfig) => {\r\n  globalThis.projectConfig = projectConfig;\r\n\r\n  switch (projectConfig.chainType) {\r\n    case 'NEAR_TESTNET':\r\n      await NEAR.init();\r\n      break;\r\n    default:\r\n      throw Error(`Unconfigured chainType '${projectConfig.chainType}'`);\r\n  }\r\n\r\n  await initAuth();\r\n  await initOrbitDB();\r\n};\r\n\r\nexport default init;\r\n\r\nexport {\r\n  getAccountId,\r\n  login,\r\n  logout,\r\n  timestamp,\r\n  getCounter,\r\n  getKeyValue,\r\n  getDocStore,\r\n  getFeed,\r\n  getEventLog,\r\n}\r\n"],"names":[],"version":3,"file":"index.d.ts.map"}