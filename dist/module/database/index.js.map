{"mappings":"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","sources":["src/database/index.js","src/database/wrappers/index.js","src/database/wrappers/counter.js","src/database/wrappers/utils.js","src/database/wrappers/database.js","src/database/wrappers/docstore.js","src/database/wrappers/eventlog.js","src/database/wrappers/feed.js","src/database/wrappers/keyvalue.js"],"sourcesContent":["import { Counter, DocStore, EventLog, Feed, KeyValue } from './wrappers'\n\nconst peerDBServer = 'https://pinning.three0dev.com/'\n\nconst cacheMap = new Map()\n\nasync function getDB(address, type, options = {}) {\n\tlet db = cacheMap.get(address)\n\tif (db) return db\n\n\tcacheMap.set(address, db)\n\ttry {\n\t\tswitch (type) {\n\t\t\tcase 'counter':\n\t\t\t\tdb = await Counter.getCounter(address)\n\t\t\t\tbreak\n\t\t\tcase 'docstore':\n\t\t\t\tdb = await DocStore.getDocStore(address, options)\n\t\t\t\tbreak\n\t\t\tcase 'eventlog':\n\t\t\t\tdb = await EventLog.getEventLog(address)\n\t\t\t\tbreak\n\t\t\tcase 'feed':\n\t\t\t\tdb = await Feed.getFeed(address)\n\t\t\t\tbreak\n\t\t\tcase 'keyvalue':\n\t\t\t\tdb = await KeyValue.getKeyValue(address)\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown database type: ${type}`)\n\t\t}\n\n\t\tcacheMap.set(address, db)\n\n\t\tawait fetch(`${peerDBServer}pin/?address=${address}`, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\tcache: 'no-cache',\n\t\t\tcredentials: 'same-origin', // include, *same-origin, omit\n\t\t\tredirect: 'follow',\n\t\t\treferrerPolicy: 'no-referrer',\n\t\t})\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\treturn db\n}\n\nexport async function getCounter(address) {\n\treturn getDB(address, 'counter')\n}\n\nexport async function getDocStore(address, options = { indexBy: '_id' }) {\n\treturn getDB(address, 'docstore', options)\n}\n\nexport async function getEventLog(address) {\n\treturn getDB(address, 'eventlog')\n}\n\nexport async function getFeed(address) {\n\treturn getDB(address, 'feed')\n}\n\nexport async function getKeyValue(address) {\n\treturn getDB(address, 'keyvalue')\n}\n\nexport function timestamp() {\n\treturn Date.now()\n}\n","import * as Counter from './counter'\nimport * as DocStore from './docstore'\nimport * as EventLog from './eventlog'\nimport * as Feed from './feed'\nimport * as KeyValue from './keyvalue'\n\nexport { Counter, DocStore, EventLog, Feed, KeyValue }\n","import { isValidDatabase } from './utils'\nimport Database from './database'\n\nclass CounterDatabase extends Database {\n\t#database\n\n\tconstructor(database) {\n\t\tsuper(database)\n\t\tthis.#database = database\n\t}\n\n\tget() {\n\t\treturn this.#database.value\n\t}\n\n\tasync inc(amt = 1) {\n\t\tif (!(amt instanceof Number && amt >= 1))\n\t\t\tthrow Error('Valid amount is required')\n\n\t\tconst incrementPromises = []\n\t\tfor (let i = 0; i < amt; i += 1) {\n\t\t\tincrementPromises.push(this.#database.inc())\n\t\t}\n\n\t\tawait Promise.all(incrementPromises)\n\t}\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getCounter = async (address, orbitdb = globalThis.orbitdb) => {\n\tif (!orbitdb) throw Error('OrbitDB is not initialized')\n\tconst isValid = await isValidDatabase(address)\n\tif (!isValid) throw Error('Invalid database address')\n\n\tconst database = await orbitdb.counter(address)\n\tawait database.load()\n\treturn new CounterDatabase(database)\n}\n","import { isValidAddress } from 'orbit-db'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isValidDatabase = async (address) => {\n\tif (!isValidAddress(address)) {\n\t\treturn false\n\t}\n\n\tconst isProjectDatabase = await globalThis.contract.valid_database({\n\t\taddress,\n\t})\n\treturn isProjectDatabase\n}\n\nexport function isValidKey(key) {\n\treturn key && typeof key === 'string'\n}\n\nexport function isValidValueObject(value) {\n\treturn value && value instanceof Object\n}\n","export default class Database {\n\t#database\n\n\tconstructor(database) {\n\t\tthis.#database = database\n\t}\n\n\tonChange(callbackfn) {\n\t\tthis.#database.events.on('replicated', () => callbackfn())\n\t}\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport Database from './database'\nimport { isValidDatabase, isValidKey, isValidValueObject } from './utils'\n\nclass DocumentDatabase extends Database {\n\t#database\n\n\tconstructor(database) {\n\t\tsuper(database)\n\t\tthis.#database = database\n\t}\n\n\tget(key = null) {\n\t\tif (key) {\n\t\t\tif (!(typeof key === 'string')) throw Error('Key is required')\n\t\t\treturn this.#database.get(key)[0]\n\t\t}\n\t\treturn this.where((e) => e !== null)\n\t}\n\n\twhere(callbackfn) {\n\t\treturn this.#database.query(callbackfn)\n\t}\n\n\tasync set(key, value) {\n\t\tif (!isValidKey(key)) throw Error('Key is required')\n\t\tif (!isValidValueObject(value)) throw Error('Value is required')\n\t\tawait this.#database.put({ _id: key, ...value })\n\t}\n\n\tasync add(value) {\n\t\tconst id = uuidv4()\n\t\tif (!isValidValueObject(value)) throw Error('Value is required')\n\t\tawait this.set(id, value)\n\t\treturn id\n\t}\n\n\tasync delete(key) {\n\t\tif (!isValidKey(key)) throw Error('Key is required')\n\t\tawait this.#database.del(key)\n\t}\n\n\tasync update(key, value) {\n\t\tif (!isValidKey(key)) throw Error('Key is required')\n\t\tif (!isValidValueObject(value)) throw Error('Value is required')\n\n\t\tconst doc = this.get(key)\n\t\tawait this.#database.put(key, { ...doc, ...value })\n\t}\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getDocStore = async (\n\taddress,\n\tindexBy,\n\torbitdb = globalThis.orbitdb\n) => {\n\tif (!orbitdb) throw Error('OrbitDB is not initialized')\n\tconst isValid = await isValidDatabase(address)\n\tif (!isValid) throw Error('Invalid database address')\n\n\tconst database = await orbitdb.docs(address, indexBy)\n\tawait database.load()\n\treturn new DocumentDatabase(database)\n}\n","/* eslint-disable no-unused-vars */\nimport Database from './database'\nimport { isValidDatabase } from './utils'\n\nclass EventLogDatabase extends Database {\n\t#database\n\n\tconstructor(database) {\n\t\tsuper(database)\n\t\tthis.#database = database\n\t}\n\n\tinstance() {\n\t\treturn this.#database\n\t}\n\n\tget(key) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\treturn this.#database.get(key)\n\t}\n\n\t// TODO Should we implement this?\n\tgetAll() {\n\t\treturn this.#database.all\n\t}\n\n\t// TODO Check if put creates a new entry for pre-exisiting ID\n\tasync set(key, value) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\treturn this.#database.put(key, value)\n\t}\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getEventLog = async (address, orbitdb = globalThis.orbitdb) => {\n\tthrow Error('Not implemented')\n\n\t//   if (!orbitdb) throw Error('OrbitDB is not initialized');\n\t//   const isValid = await isValidDatabase(address);\n\t//   if (!isValid) throw Error('Invalid database address');\n\n\t//   const database = await orbitdb.log(address);\n\t//   return new EventLogDatabase(database);\n}\n","/* eslint-disable no-unused-vars */\nimport Database from './database'\nimport { isValidDatabase } from './utils'\n\nclass FeedDatabase extends Database {\n\t#database\n\n\tconstructor(database) {\n\t\tsuper(database)\n\t\tthis.#database = database\n\t}\n\n\tinstance() {\n\t\treturn this.#database\n\t}\n\n\tget(key) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\treturn this.#database.get(key).map((e) => e.payload.value)\n\t}\n\n\tadd(value) {\n\t\treturn this.#database.add(value)\n\t}\n\n\t// TODO Should we implement this?\n\tgetAll() {\n\t\treturn this.#database.all\n\t}\n\n\t// TODO Check if put creates a new entry for pre-exisiting ID\n\tasync set(key, value) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\treturn this.#database.put(key, value)\n\t}\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getFeed = async (address, orbitdb = globalThis.orbitdb) => {\n\tthrow Error('Not implemented')\n\n\t//   if (!orbitdb) throw Error('OrbitDB is not initialized');\n\t//   const isValid = await isValidDatabase(address);\n\t//   if (!isValid) throw Error('Invalid database address');\n\n\t//   const database = await orbitdb.log(address);\n\t//   return new FeedDatabase(database);\n}\n","import Database from './database'\nimport { isValidDatabase } from './utils'\n\nclass KVDatabase extends Database {\n\t#database\n\n\tconstructor(database) {\n\t\tsuper(database)\n\t\tthis.#database = database\n\t}\n\n\tinstance() {\n\t\treturn this.#database\n\t}\n\n\tget(key) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\treturn this.#database.get(key)\n\t}\n\n\tgetAll() {\n\t\treturn this.#database.all\n\t}\n\n\tasync set(key, value) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\tawait this.#database.put(key, value)\n\t}\n\n\tasync delete(key) {\n\t\tif (!(key && key instanceof String)) throw Error('Key is required')\n\t\tawait this.#database.delete(key)\n\t}\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getKeyValue = async (address, orbitdb = globalThis.orbitdb) => {\n\tif (!orbitdb) throw Error('OrbitDB is not initialized')\n\tconst isValid = await isValidDatabase(address)\n\tif (!isValid) throw Error('Invalid database address')\n\n\tconst database = await orbitdb.keyvalue(address)\n\tawait database.load()\n\treturn new KVDatabase(database)\n}\n"],"names":[],"version":3,"file":"index.js.map"}