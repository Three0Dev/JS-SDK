{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,a,G,mC,C;A,c,C,I,G,0B,C;;;;AAGO,SAASA,mCAAT,GAAyB;IAC/B,MAAMC,aAAa,GAAGC,UAAU,CAACC,aAAX,CAAyBC,YAA/C,AAAA;IACA,MAAMC,SAAS,GAAG,AAAA,CAAA,GAAAC,wBAAA,CAAA,EAAlB,AAAA;IAEA,OAAQD,SAAR;QACC,KAAK,YAAL,CAAA;QACA,KAAK,SAAL;YACC,OAAO;gBACNE,SAAS,EAAE,SADL;gBAENC,OAAO,EAAE,8BAFH;gBAGNJ,YAAY,EAAEH,aAHR;gBAINQ,SAAS,EAAE,yBAJL;gBAKNC,SAAS,EAAE,iCALL;gBAMNC,WAAW,EAAE,mCAAbA;aAND,CAAO;QAQR,KAAK,aAAL,CAAA;QACA,KAAK,SAAL;YACC,OAAO;gBACNJ,SAAS,EAAE,SADL;gBAENC,OAAO,EAAE,8BAFH;gBAGNJ,YAAY,EAAEH,aAHR;gBAINQ,SAAS,EAAE,iCAJL;gBAKNC,SAAS,EAAE,iCALL;gBAMNC,WAAW,EAAE,mCAAbA;aAND,CAAO;QAQR,KAAK,SAAL;YACC,OAAO;gBACNJ,SAAS,EAAE,SADL;gBAENC,OAAO,EAAE,8BAFH;gBAGNJ,YAAY,EAAEH,aAHR;gBAINQ,SAAS,EAAE,iCAJL;gBAKNC,SAAS,EAAE,iCALL;gBAMNC,WAAW,EAAE,mCAAbA;aAND,CAAO;QAQR,KAAK,OAAL;YACC,OAAO;gBACNJ,SAAS,EAAE,OADL;gBAENC,OAAO,EAAE,uBAFH;gBAGNI,OAAO,EAAG,CAAA,qBAAmB,yBAAA,CAHvB;gBAINH,SAAS,EAAE,8BAJL;gBAKNL,YAAY,EAAEH,aAAdG;aALD,CAAO;QAOR,KAAK,MAAL,CAAA;QACA,KAAK,IAAL;YACC,OAAO;gBACNG,SAAS,EAAE,aADL;gBAENC,OAAO,EAAE,iCAFH;gBAGNJ,YAAY,EAAEH,aAHR;gBAINe,aAAa,EAAE,WAAfA;aAJD,CAAO;QAMR,KAAK,YAAL;YACC,OAAO;gBACNT,SAAS,EAAE,qBADL;gBAENC,OAAO,EAAE,iCAFH;gBAGNJ,YAAY,EAAEH,aAHR;gBAINe,aAAa,EAAE,WAAfA;aAJD,CAAO;QAMR;YACC,MAAMC,KAAK,CACT,CAAA,0BAAA,EAA4BZ,SAAU,CAAA,sCAAA,CAD7B,CAAX,CAAA;KAtDF;C,CA4DD,6CAFC;AAGM,eAAea,0BAAf,GAAsB;IAC5B,MAAMC,UAAU,GAAGnB,mCAAa,EAAhC,AAD4B,EAG5B,4CAFA;IAGA,MAAMoB,IAAI,GAAG,MAAM,AAAA,CAAA,GAAAC,cAAA,CAAA,CAAQ;QAC1BC,IAAI,EAAE;YAAEC,QAAQ,EAAE,IAAIC,gBAAA,CAAUC,2BAAd,EAAVF;SADkB;QAE1B,GAAGJ,UAAH;KAFkB,CAAnB,AAJ4B,EAS5B,+EAL2B;IAM3B,+CAAA;IACAjB,UAAU,CAACwB,gBAAX,GAA8B,IAAIC,uBAAJ,CAAqBP,IAArB,CAA9B,CAX4B,CAa5B,wEAFAlB;IAGAA,UAAU,CAAC0B,SAAX,GAAuB1B,UAAU,CAACwB,gBAAX,CAA4BG,YAA5B,EAAvB,CAd4B,CAgB5B,oEAFA3B;IAGAA,UAAU,CAAC4B,QAAX,GAAsB,IAAIC,eAAJ,CACrB7B,UAAU,CAACwB,gBAAX,CAA4BM,OAA5B,EADqB,EAErBb,UAAU,CAACf,YAFU,EAGrB;QACC,0FAAA;QACA6B,WAAW,EAAE;YAAC,aAAD;YAAgB,UAAhB;YAA4B,gBAA5B;SAFd;QAGC,6FAAA;QACAC,aAAa,EAAE;YAAC,aAAD;YAAgB,aAAhB;SAAfA;KAPoB,CAAtB,CAGC;CAOD;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,iB,G,uC,C;A,c,C,M,G,4B,C;A,c,C,c,G,oC,C;AC/FM,SAAS5B,uCAAT,GAA6B;IACnC,OAAQJ,UAAU,CAACC,aAAX,CAAyBE,SAAjC;QACC,KAAK,cAAL;YACC,OAAO,SAAP,CAAA;QACD;YACC,MAAMY,KAAK,CACT,CAAA,wBAAA,EAA0Bf,UAAU,CAACC,aAAX,CAAyBE,SAAU,CAAA,CAAA,CADpD,CAAX,CAAA;KAJF;CAQA;AAEM,SAAS8B,4BAAT,GAAkB;IACxB,OAAOjC,UAAU,CAACkC,SAAlB,CAAA;CACA;AAEM,SAASC,oCAAT,GAA0B;IAChC,OAAO,IAAIC,eAAJ,CAAoBC,QAAQ,CAACC,MAA7B,CAAP,CAAA;CACA;;;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,O,G,K,C,C;;AChBD,IAAA,8BAAA,GAAA,4CAAA,CAAA,cAAA,CAAA,AAAA;;AACA,IAAA,2BAAA,GAAA,4CAAA,CAAA,wBAAA,CAAA,AAAA;;;A,S,4C,C,G,E;I,O,G,I,G,C,U,G,G,G;Q,O,E,G;K,C;C;AAFA,6DAAA;AAGA,wDAAA;AAGA,gBAAA;AACA,MAAMC,iCAAW,GAAG,UAAY;IAC/B,IAAIvC,UAAU,CAACwC,OAAf,EAAwB,OAAxB;IAEA,MAAMC,IAAI,GAAG,MAAM,AAAA,CAAA,GAAAC,2BAAAA,CAAAA,OAAA,CAAA,EAAnB,AAAA;IACA,MAAMC,QAAQ,GAAG,AAAA,CAAA,GAAAC,iBAAA,CAAA,EAAjB,AAAA;IAEA,IAAID,QAAJ,EACC;QAAA,IAAI3C,UAAU,CAACC,aAAX,CAAyBE,SAAzB,CAAmC0C,QAAnC,CAA4C,MAA5C,CAAJ,EACC,8DAAA;QACA,oFAAA;QACA,kEAAA;QACA7C,UAAU,CAACwC,OAAX,GAAqB,MAAMM,8BAAAA,CAAAA,OAAA,CAAQC,cAAR,CAAuBN,IAAvB,CAA3B,CAAAzC;KACA,MAEDA,UAAU,CAACwC,OAAX,GAAqB,MAAMM,8BAAAA,CAAAA,OAAA,CAAQC,cAAR,CAAuBN,IAAvB,CAA3B,CAAAzC;CAdF,AAgBC;AAEcuC,IAAAA,8BAAAA,GAAAA,iC,AAAAA;A,c,C,O,G,8B,C;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,O,G,K,C,C;;ACzBf,IAAA,0BAAA,GAAA,6CAAA,CAAA,eAAA,CAAA,AAAA;A,S,8C,C,Y,E;I,I,O,O,K,U,E,O,I,C;I,I,iB,G,I,O,E,A;I,I,gB,G,I,O,E,A;I,O,A,C,8C,G,S,W,E;Q,O,W,G,gB,G,iB,C;K,C,C,Y,C,C;C;A,S,6C,C,G,E,W,E;I,I,C,W,I,G,I,G,C,U,E,O,G,C;I,I,G,K,I,I,O,G,K,Q,I,O,G,K,U,E,O;Q,O,E,G;K,C;I,I,K,G,8C,C,W,C,A;I,I,K,I,K,C,G,C,G,C,E,O,K,C,G,C,G,C,C;I,I,M,G,E,A;I,I,qB,G,M,C,c,I,M,C,wB,A;I,I,I,G,I,G,C,I,G,K,S,I,M,C,S,C,c,C,I,C,G,E,G,C,E;Q,I,I,G,qB,G,M,C,wB,C,G,E,G,C,G,I,A;Q,I,I,I,C,I,C,G,I,I,C,G,C,A,E,M,C,c,C,M,E,G,E,I,C,C;a,M,C,G,C,G,G,C,G,C,C;K;I,M,C,O,G,G,C;I,I,K,E,K,C,G,C,G,E,M,C,C;I,O,M,C;C;AAEA,IAAIE,0BAAJ,AAAA;AAEA,MAAMO,iCAAW,GAAG;IACnBC,KAAK,EAAE,IADY;IAEnBC,YAAY,EAAE;QACbC,MAAM,EAAE,IAARA;KAHkB;IAKnBC,OAAO,EAAE;QACRC,OAAO,EAAE,KAATA;KANkB;IAQnBC,MAAM,EAAE;QACPC,SAAS,EAAE;YACVC,KAAK,EAAE;gBACN,kEADM;aAAPA;SADU;KADJ;CART,AAAoB;AAiBpB,MAAMd,8BAAQ,GAAG,UAAY;IAC5BD,0BAAI,GAAGA,0BAAI,IAAK,MAAMgB,0BAAI,CAACC,MAAL,CAAYV,iCAAZ,CAAX,AAAX,CAAAP;IACA,OAAOA,0BAAP,CAAA;CAFD,AAGC;AAEcC,IAAAA,8BAAAA,GAAAA,8B,AAAAA;A,c,C,O,G,8B,C;;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,G,G,yB,C;A,c,C,Y,G,kC,C;A,c,C,U,G,gC,C;A,c,C,K,G,2B,C;A,c,C,M,G,4B,C;AC1BR,SAASiB,yBAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzB,OAAOD,CAAC,GAAGC,CAAX,CAAA;CACE;AAEI,SAASjB,gCAAT,GAAsB;IAC5B,OAAO5C,UAAU,CAACwB,gBAAX,CAA4BsC,UAA5B,EAAP,CAAA;CACA;AAEM,SAASnC,kCAAT,GAAwB;IAC9B,OAAO3B,UAAU,CAACwB,gBAAX,CAA4BG,YAA5B,EAAP,CAAA;CACA;AAEM,eAAeoC,4BAAf,GAAwB;IAC9B,IAAI;QACH,MAAM/D,UAAU,CAAC4B,QAAX,CAAoBoC,WAApB,CAAgC;YACrCC,MAAM,EAAE,QAARA;SADK,CAAN,CAAsC;QAGtCjE,UAAU,CAACwB,gBAAX,CAA4B0C,OAA5B,EAAAlE,CAAAA;KAJD,CAKE,OAAOmE,CAAP,EAAU;QACXC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAAAC,CAAAA;QACA,MAAMD,CAAN,CAAA;KACA;CACD;AAEM,eAAeG,2BAAf,GAIL;IAAA,IAHDC,OAGC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAHS,eAGT,AAAA;IAAA,IAFDC,UAEC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAFYC,MAAM,CAACpC,QAAP,CAAgBqC,IAE5B,AAAA;IAAA,IADDC,UACC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADYF,MAAM,CAACpC,QAAP,CAAgBqC,IAC5B,AAAA;IACD1E,UAAU,CAACwB,gBAAX,CAA4BoD,aAA5B,CACC5E,UAAU,CAACC,aAAX,CAAyBC,YAD1B,EAECqE,OAFD,EAGCC,UAHD,EAICG,UAJD,CAAA3E,CAAAA;CAMA;;;;;;A,Y,C;A,M,C,c,C,c,E,Y,E;I,K,E,I;C,C,C;A,c,C,O,G,8B,C;;;ACjCc,eAAe6E,8BAAf,GAA0B;IACxC,IAAI,AAAA,CAAA,GAAAC,iBAAA,CAAA,EAAJ,EAAyB;QACxB,IAAIlC,UAAU,GAAG,IAAjB,AAAA;QAEA,IAAI;YACHA,UAAU,GAAG,MAAM5C,UAAU,CAAC4B,QAAX,CAAoBmD,QAApB,CAA6B;gBAC/CC,UAAU,EAAE,AAAA,CAAA,GAAArD,mBAAA,CAAA,EAAZqD;aADkB,CAAnB,CAAgD;SADjD,CAIE,OAAOb,CAAP,EAAU;YACXvB,UAAU,GAAG,KAAb,CAAAA;SACA;QAED,IAAI,CAACA,UAAL,EACC,MAAM5C,UAAU,CAAC4B,QAAX,CAAoBoC,WAApB,CAAgC;YACrCC,MAAM,EAAE,OAARA;SADK,CAAN,CAAsC;KAIvC;CACD;;;;;A,Y,C;A,M,C,c,C,yB,E,Y,E;I,K,E,I;C,C,C;A,yB,C,O,G,K,C,C;;A,Y,C;A,M,C,c,C,yB,E,Y,E;I,K,E,I;C,C,C;A,yB,C,I,G,K,C,C;;AEpBD,IAAA,0BAAA,GAAA,6CAAA,CAAA,wBAAA,CAAA,AAAA;A,yB,C,I,G,0B,C;A,S,8C,C,Y,E;I,I,O,O,K,U,E,O,I,C;I,I,iB,G,I,O,E,A;I,I,gB,G,I,O,E,A;I,O,A,C,8C,G,S,W,E;Q,O,W,G,gB,G,iB,C;K,C,C,Y,C,C;C;A,S,6C,C,G,E,W,E;I,I,C,W,I,G,I,G,C,U,E,O,G,C;I,I,G,K,I,I,O,G,K,Q,I,O,G,K,U,E,O;Q,O,E,G;K,C;I,I,K,G,8C,C,W,C,A;I,I,K,I,K,C,G,C,G,C,E,O,K,C,G,C,G,C,C;I,I,M,G,E,A;I,I,qB,G,M,C,c,I,M,C,wB,A;I,I,I,G,I,G,C,I,G,K,S,I,M,C,S,C,c,C,I,C,G,E,G,C,E;Q,I,I,G,qB,G,M,C,wB,C,G,E,G,C,G,I,A;Q,I,I,I,C,I,C,G,I,I,C,G,C,A,E,M,C,c,C,M,E,G,E,I,C,C;a,M,C,G,C,G,G,C,G,C,C;K;I,M,C,O,G,G,C;I,I,K,E,K,C,G,C,G,E,M,C,C;I,O,M,C;C;;;;ADCA,IAAA,2BAAA,GAAA,4CAAA,CAAA,wBAAA,CAAA,AAAA;;AACA,IAAA,4BAAA,GAAA,4CAAA,CAAA,wBAAA,CAAA,AAAA;A,S,4C,C,G,E;I,O,G,I,G,C,U,G,G,G;Q,O,E,G;K,C;C;AAEA,MAAMjD,0BAAI,GAAG,OAAOf,aAAP,GAAyB;IACrCD,UAAU,CAACC,aAAX,GAA2BA,aAA3B,CAAAD;IAEA,OAAQC,aAAa,CAACE,SAAtB;QACC,KAAK,cAAL;YACC,MAAM8E,8BAAA,CAAKjE,IAAL,EAAN,CAAA;YACA,MAAA;QACD;YACC,MAAMD,KAAK,CAAE,CAAA,wBAAA,EAA0Bd,aAAa,CAACE,SAAU,CAAA,CAAA,CAApD,CAAX,CAAA;KALF;IAQA,MAAM,AAAA,CAAA,GAAA0E,4BAAAA,CAAAA,OAAA,CAAA,EAAN,CAAA;IACA,MAAM,AAAA,CAAA,GAAAtC,2BAAAA,CAAAA,OAAA,CAAA,EAAN,CAAA;CAZD,AAaC;AAEcvB,IAAAA,8BAAAA,GAAAA,0B,AAAAA;A,yB,C,O,G,8B,C","sources":["src/blockchain/NEAR.js","src/utils.js","src/database/init.js","src/database/ipfs/index.js","src/auth/index.js","src/auth/init.js","src/index.js","src/blockchain/index.js"],"sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'\r\nimport { getBlockchainType } from '../utils'\r\n\r\nexport function getNearConfig() {\r\n\tconst CONTRACT_NAME = globalThis.projectConfig.contractName\r\n\tconst chainType = getBlockchainType()\r\n\r\n\tswitch (chainType) {\r\n\t\tcase 'production':\r\n\t\tcase 'mainnet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'mainnet',\r\n\t\t\t\tnodeUrl: 'https://rpc.mainnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.mainnet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.mainnet.near.org',\r\n\t\t\t}\r\n\t\tcase 'development':\r\n\t\tcase 'testnet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'testnet',\r\n\t\t\t\tnodeUrl: 'https://rpc.testnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.testnet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.testnet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.testnet.near.org',\r\n\t\t\t}\r\n\t\tcase 'betanet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'betanet',\r\n\t\t\t\tnodeUrl: 'https://rpc.betanet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\twalletUrl: 'https://wallet.betanet.near.org',\r\n\t\t\t\thelperUrl: 'https://helper.betanet.near.org',\r\n\t\t\t\texplorerUrl: 'https://explorer.betanet.near.org',\r\n\t\t\t}\r\n\t\tcase 'local':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'local',\r\n\t\t\t\tnodeUrl: 'http://localhost:3030',\r\n\t\t\t\tkeyPath: `${process.env.HOME}/.near/validator_key.json`,\r\n\t\t\t\twalletUrl: 'http://localhost:4000/wallet',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t}\r\n\t\tcase 'test':\r\n\t\tcase 'ci':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'shared-test',\r\n\t\t\t\tnodeUrl: 'https://rpc.ci-testnet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\tmasterAccount: 'test.near',\r\n\t\t\t}\r\n\t\tcase 'ci-betanet':\r\n\t\t\treturn {\r\n\t\t\t\tnetworkId: 'shared-test-staging',\r\n\t\t\t\tnodeUrl: 'https://rpc.ci-betanet.near.org',\r\n\t\t\t\tcontractName: CONTRACT_NAME,\r\n\t\t\t\tmasterAccount: 'test.near',\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow Error(\r\n\t\t\t\t`Unconfigured environment '${chainType}'. Can be configured in src/config.js.`\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n// Initialize contract & set global variables\r\nexport async function init() {\r\n\tconst nearConfig = getNearConfig()\r\n\r\n\t// Initialize connection to the NEAR testnet\r\n\tconst near = await connect({\r\n\t\tdeps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() },\r\n\t\t...nearConfig,\r\n\t})\r\n\r\n\t// Initializing Wallet based Account. It can work with NEAR testnet wallet that\r\n\t// is hosted at https://wallet.testnet.near.org\r\n\tglobalThis.walletConnection = new WalletConnection(near)\r\n\r\n\t// Getting the Account ID. If still unauthorized, it's just empty string\r\n\tglobalThis.accountId = globalThis.walletConnection.getAccountId()\r\n\r\n\t// Initializing our contract APIs by contract name and configuration\r\n\tglobalThis.contract = new Contract(\r\n\t\tglobalThis.walletConnection.account(),\r\n\t\tnearConfig.contractName,\r\n\t\t{\r\n\t\t\t// View methods are read only. They don't modify the state, but usually return some value.\r\n\t\t\tviewMethods: ['user_exists', 'get_user', 'valid_database'],\r\n\t\t\t// Change methods can modify the state. But you don't receive the returned value when called.\r\n\t\t\tchangeMethods: ['create_user', 'user_action'],\r\n\t\t}\r\n\t)\r\n}\r\n","export function getBlockchainType() {\r\n\tswitch (globalThis.projectConfig.chainType) {\r\n\t\tcase 'NEAR_TESTNET':\r\n\t\t\treturn 'testnet'\r\n\t\tdefault:\r\n\t\t\tthrow Error(\r\n\t\t\t\t`Unconfigured chainType '${globalThis.projectConfig.chainType}'`\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport function getPID() {\r\n\treturn globalThis.projectId\r\n}\r\n\r\nexport function getQueryParams() {\r\n\treturn new URLSearchParams(location.search)\r\n}\r\n","// import IdentityProvider from 'orbit-db-identity-provider';\r\nimport OrbitDB from 'orbit-db'\r\nimport initIPFS from './ipfs'\r\n// import NearIdentityProvider from './identities/NEAR';\r\nimport { isLoggedIn } from '../auth'\r\n\r\n// Start OrbitDB\r\nconst initOrbitDB = async () => {\r\n\tif (globalThis.orbitdb) return\r\n\r\n\tconst ipfs = await initIPFS()\r\n\tconst loggedIn = isLoggedIn()\r\n\r\n\tif (loggedIn) {\r\n\t\tif (globalThis.projectConfig.chainType.includes('NEAR')) {\r\n\t\t\t// IdentityProvider.addIdentityProvider(NearIdentityProvider);\r\n\t\t\t// const identity = await IdentityProvider.createIdentity({ type: 'NearIdentity' });\r\n\t\t\t// const orbitdb = await OrbitDB.createInstance(ipfs, {identity});\r\n\t\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\r\n\t\t}\r\n\t} else {\r\n\t\tglobalThis.orbitdb = await OrbitDB.createInstance(ipfs)\r\n\t}\r\n}\r\n\r\nexport default initOrbitDB\r\n","import * as IPFS from 'ipfs-core'\r\n\r\nlet ipfs\r\n\r\nconst IPFS_CONFIG = {\r\n\tstart: true,\r\n\tEXPERIMENTAL: {\r\n\t\tpubsub: true,\r\n\t},\r\n\tpreload: {\r\n\t\tenabled: false,\r\n\t},\r\n\tconfig: {\r\n\t\tAddresses: {\r\n\t\t\tSwarm: [\r\n\t\t\t\t'/dns4/three0-rtc-node.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n}\r\n\r\nconst initIPFS = async () => {\r\n\tipfs = ipfs || (await IPFS.create(IPFS_CONFIG))\r\n\treturn ipfs\r\n}\r\n\r\nexport default initIPFS\r\n","export function add(a, b) {\r\n\treturn a + b;\r\n  }\r\n\r\nexport function isLoggedIn() {\r\n\treturn globalThis.walletConnection.isSignedIn()\r\n}\r\n\r\nexport function getAccountId() {\r\n\treturn globalThis.walletConnection.getAccountId()\r\n}\r\n\r\nexport async function logout() {\r\n\ttry {\r\n\t\tawait globalThis.contract.user_action({\r\n\t\t\taction: 'LOGOUT',\r\n\t\t})\r\n\t\tglobalThis.walletConnection.signOut()\r\n\t} catch (e) {\r\n\t\tconsole.error(e)\r\n\t\tthrow e\r\n\t}\r\n}\r\n\r\nexport async function login(\r\n\tappName = 'My Three0 App',\r\n\tsuccessUrL = window.location.href,\r\n\tfailureUrL = window.location.href\r\n) {\r\n\tglobalThis.walletConnection.requestSignIn(\r\n\t\tglobalThis.projectConfig.contractName,\r\n\t\tappName,\r\n\t\tsuccessUrL,\r\n\t\tfailureUrL\r\n\t)\r\n}\r\n","import { isLoggedIn as isLoggedInLocally, getAccountId } from '.'\r\n\r\nexport default async function initAuth() {\r\n\tif (isLoggedInLocally()) {\r\n\t\tlet isLoggedIn = true\r\n\r\n\t\ttry {\r\n\t\t\tisLoggedIn = await globalThis.contract.get_user({\r\n\t\t\t\taccount_id: getAccountId(),\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tisLoggedIn = false\r\n\t\t}\r\n\r\n\t\tif (!isLoggedIn) {\r\n\t\t\tawait globalThis.contract.user_action({\r\n\t\t\t\taction: 'LOGIN',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import { NEAR } from './blockchain'\r\nimport initOrbitDB from './database/init'\r\nimport initAuth from './auth/init'\r\n\r\nconst init = async (projectConfig) => {\r\n\tglobalThis.projectConfig = projectConfig\r\n\r\n\tswitch (projectConfig.chainType) {\r\n\t\tcase 'NEAR_TESTNET':\r\n\t\t\tawait NEAR.init()\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tthrow Error(`Unconfigured chainType '${projectConfig.chainType}'`)\r\n\t}\r\n\r\n\tawait initAuth()\r\n\tawait initOrbitDB()\r\n}\r\n\r\nexport default init\r\n","import * as NEAR from './NEAR'\r\n\r\nexport {\r\n\t// eslint-disable-next-line import/prefer-default-export\r\n\tNEAR,\r\n}\r\n"],"names":["getNearConfig","CONTRACT_NAME","globalThis","projectConfig","contractName","chainType","getBlockchainType","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","keyPath","process","env","HOME","masterAccount","Error","init","nearConfig","near","connect","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","getPID","projectId","getQueryParams","URLSearchParams","location","search","initOrbitDB","orbitdb","ipfs","initIPFS","loggedIn","isLoggedIn","includes","OrbitDB","createInstance","IPFS_CONFIG","start","EXPERIMENTAL","pubsub","preload","enabled","config","Addresses","Swarm","IPFS","create","add","a","b","isSignedIn","logout","user_action","action","signOut","e","console","error","login","appName","successUrL","window","href","failureUrL","requestSignIn","initAuth","isLoggedInLocally","get_user","account_id","NEAR"],"version":3,"file":"index.js.map"}